def version = 'v0.0.9'

if (settings.ext.find("DOLBYIO_GRADLE_VERSION_USED")) {
    version = DOLBYIO_GRADLE_VERSION_USED
}

def useLocalFiles = settings.ext.find("DOLBYIO_USE_LOCAL_FILES") && settings.ext.DOLBYIO_USE_LOCAL_FILES

def files = [
  "dependencyUpdates",
  "detekt",
  "dokka",
  "jacoco",
  "ktlint",
  "license",
  "modules",
  "moduleSetup",
  "publishing",
  "sonarqube",
  "tasks"
].collectEntries{[it, "${it}.gradle"]}

def holder = [
    catalog: 'libs.versions.toml',
    detektConfig: 'detekt-config.yml',
    ktlintConfig: 'ktlint-editorconfig',
    jacocoProject: 'jacoco.project.gradle',
    dokkaProject: 'dokka.project.gradle'
]

holder.each {
  files[it.key] = it.value
}

def output = "${rootDir}/gradle/dolbyio/${version}"
def outputDir = new File(output)

def random = new Random()
def currentDir = null == buildscript.sourceFile ? null : file(buildscript.sourceFile).getParentFile().getAbsolutePath()

if (null == currentDir) useLocalFiles = false

if (useLocalFiles) {
  println("using files located at ${currentDir}/gradle/")
} else {
  if (!outputDir.exists()) outputDir.mkdirs()
}

files.each {
  def result = "${output}/${it.value}"

  if (useLocalFiles) {
    result = "${currentDir}/gradle/${it.value}"
  } else {
    def url = "https://raw.githubusercontent.com/voxeet/voxeet-sdk-android-gradle/${version}/gradle/${it.value}?timestamp=${random.nextInt()}"
    def file = new File(result)

    if (!file.exists()) {
        new URL(url).withInputStream{ i -> file.withOutputStream{ it << i }}
    }
  }

  it.value = result
}

gradle.ext.dolbyio = [
  files: files
]

