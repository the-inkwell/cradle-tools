pluginManagement {
    repositories {
        gradlePluginPortal()
        google()
        mavenCentral() // <- set for the validation pending managed-device plugin
        mavenLocal() // <- set for the validation pending managed-device plugin
    }
}

//in order to change the version used, change this or override GRADLE_EXTENDED_VERSION_USED (sha, tag, etc...)

def additionalsGradle = "./extended.gradle"

if (settings.ext.find("GRADLE_EXTENDED_VERSION_USED")) {
    def version = GRADLE_EXTENDED_VERSION_USED
    def random = new Random()
    additionalsGradle = "https://raw.githubusercontent.com/the-inkwell/gradle-tools/${version}/extended.gradle?rand=${random.nextInt()}"
}

apply from: additionalsGradle

dependencyResolutionManagement {
    versionCatalogs {
        additionals {
            from(files(gradle.extended.files.catalog))
        }
    }
}

["library", "app"].each {
    include ":$it"
    project(":$it").projectDir = new File(rootProject.projectDir, "sample/$it")
}

includeBuild "configurations/kt-plugins"